openapi: 3.0.0

info:
  title: argus
  description: My blog
  version: 1.0.0

paths:
  /find/article/list:
    get:
      summary: Return a list of articles.
      responses:
        '200':
          description: A JSON array of articles.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
  /find/article/list/title:
    get:
      summary: Return a list of articles by title.
      parameters:
        - name: title
          in: path
          required: true
          description: A title of articles.
          schema:
            type: number
      responses:
        '200':
          description: A JSON array of articles.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
  /find/article/list/create-date:
    get:
      summary: Return a list of articles by title.
      parameters:
        - name: create_date
          in: path
          required: true
          description: A created date of articles.
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of articles.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
  /find/article/list/category:
    get:
      summary: Return a list of articles by title.
      parameters:
        - name: category
          in: path
          required: true
          description: A category name which an articles has.
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A JSON array of articles.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
  /find/category/list:
    get:
      summary: Return a list of categories.
      responses:
        '200':
          description: A JSON array of cateogries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
  /register/article:
    post:
      summary: Register new articles.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article:
                  $ref: '#/components/schemas/RequestArticle'
                contents:
                  type: string
              required:
                - articles
                - contents
      responses:
        '200':
          description: Success
        '503':
          description: Failed
  /update/article:
    put:
      summary: Register new articles.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article:
                  $ref: '#/components/schemas/RequestArticle'
                contents:
                  type: string
              required:
                - articles
                - contents
      responses:
        '200':
          description: Success
        '503':
          description: Failed

components:
  schemas:
    Article:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
        createDate:
          type: string
        updateDate:
          type: string
        contentHash:
          type: string
        imageHash:
          type: string
        private:
          type: boolean
      required:
        - id
        - title
        - categories
        - createDate
        - updateDate
        - contentHash
        - imageHash
        - private
    Category:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        articleNum:
          type: number
      required:
        - id
        - name
        - articleNum
    Draft:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        categories:
          type: string
        updateDate:
          type: string
        contentHash:
          type: string
        imageHash:
          type: string
      required:
        - id
        - title
        - categories
        - updateDate
        - contentHash
        - imageHash
    RequestArticle:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              name:
                type: string
            required:
              - id
              - name
        contentHash:
          type: string
        imageHash:
          type: string
        private:
          type: boolean
      required:
        - id
        - title
        - categories
        - contentHash
        - imageHash
        - private
    RequestDraft:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        categories:
          type: string
        contentHash:
          type: string
        imageHash:
          type: string
      required:
        - id
        - title
        - categories
        - contentHash
        - imageHash