openapi: 3.0.0

info:
  title: argus
  description: My blog
  version: 1.0.0

servers:
  - url: http://localhost:8000
    description: local server
  - url: https://argus.champonian.com
    description: domain

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Article:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
        created_at:
          type: string
        updated_at:
          type: string
        content:
          type: string
        image_url:
          type: string
        status:
          type: number
      required:
        - id
        - title
        - tags
        - created_at
        - updated_at
        - content
        - image_url
        - status

    Tag:
      type: object
      properties:
        name:
          type: string
        n_articles:
          type: number
      required:
        - name
        - n_articles

    Pagenation:
      type: object
      properties:
        next:
          type: boolean
        current:
          type: number
        prev:
          type: boolean
      required:
        - next
        - current
        - prev

    PostArticleRequestBody:
      type: object
      properties:
        title:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
        content:
          type: string
        image_url:
          type: string
        status:
          type: number
      required:
        - title
        - tags
        - content
        - image_url
        - status

    UpdateArticleRequestBody:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
        content:
          type: string
        image_url:
          type: string
        status:
          type: number
      required:
        - id
        - title
        - tags
        - content
        - image_url
        - status

    UpdateArticleStatusRequestBody:
      type: object
      properties:
        id:
          type: string
        status:
          type: number
      required:
        - id
        - status

    DeleteArticleRequestBody:
      type: object
      properties:
        id:
          type: string
      required:
        - id

    DeleteImagesRequestBody:
      properties:
        image_urls:
          type: array
          items:
            type: string
      required:
        - image_urls


paths:
  /api/v3/get/article/id/{id}:
    get:
      summary: Return a public article by id.
      parameters:
        - name: id
          in: path
          required: true
          description: Article id.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  article:
                    $ref: '#/components/schemas/Article'
                required:
                  - article
        '400':
          description: Invalid query parameters.
        '404':
          description: Not Found.
        '500':
          description: Internal server error.


  /api/v3/get/articles:
    get:
      summary: Return public articles.
      parameters:
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  pagenation:
                    $ref: '#/components/schemas/Pagenation'
                required:
                  - articles
                  - pagenation
        '400':
          description: Invalid query parameters.
        '404':
          description: Not Found.
        '500':
          description: Internal server error.


  /api/v3/get/articles/title/{title}:
    get:
      summary: Return public articles by title.
      parameters:
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
        - name: title
          in: path
          required: true
          description: Article title.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  pagenation:
                    $ref: '#/components/schemas/Pagenation'
                required:
                  - articles
                  - pagenation
        '400':
          description: Invalid query parameters.
        '404':
          description: Not Found.
        '500':
          description: Internal server error.


  /api/v3/get/articles/tag/{tag}:
    get:
      summary: Return public articles by tag.
      parameters:
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
        - name: tag
          in: path
          required: true
          description: Tag name.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  pagenation:
                    $ref: '#/components/schemas/Pagenation'
                required:
                  - articles
                  - pagenation
        '400':
          description: Invalid query parameters.
        '404':
          description: Not Found.
        '500':
          description: Internal server error.


  /api/v3/get/tags:
    get:
      summary: Return tags which belong to public articles.
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tag'
                required:
                  - tags
        '400':
          description: Invalid query parameters.
        '404':
          description: Not Found.
        '500':
          description: Internal server error.


  /api/v3/private/get/article/id/{id}:
    get:
      summary: Return an article by id.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Article id.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  article:
                    $ref: '#/components/schemas/Article'
                required:
                  - article
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '404':
          description: Not Found.
        '500':
          description: Internal server error.


  /api/v3/private/get/articles:
    get:
      summary: Return articles.
      security:
        - BearerAuth: []
      parameters:
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  pagenation:
                    $ref: '#/components/schemas/Pagenation'
                required:
                  - articles
                  - pagenation
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.


  /api/v3/private/get/drafts:
    get:
      summary: Fetch draft articles.
      security:
        - BearerAuth: []
      parameters:
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  pagenation:
                    $ref: '#/components/schemas/Pagenation'
                required:
                  - articles
                  - pagenation
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.


  /api/v3/private/get/images:
    get:
      summary: Fetch images.
      security:
        - BearerAuth: []
      parameters:
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_urls:
                    type: array
                    items:
                      type: string
                  pagenation:
                    $ref: '#/components/schemas/Pagenation'
                required:
                  - image_urls
                  - pagenation
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.


  /api/v3/private/post/article:
    post:
      summary: Post an article.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostArticleRequestBody"
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.


  /api/v3/private/post/image:
    post:
      summary: Register a image.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
              required:
                - image
      responses:
        '200':
          description: Success.
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.


  /api/v3/private/update/article:
    put:
      summary: Update an article.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateArticleRequestBody"
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.


  /api/v3/private/update/article/status:
    put:
      summary: Update the article status.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateArticleStatusRequestBody"
      responses:
        '200':
          description: Success.
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.


  /api/v3/private/delete/article:
    delete:
      summary: Delete an article with id.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteArticleRequestBody"
      responses:
        '200':
          description: Success.
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.


  /api/v3/private/delete/images:
    delete:
      summary: Delete images.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteImagesRequestBody"
      responses:
        '200':
          description: Success.
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.


  /api/v3/private/verify:
    post:
      summary: Verify token.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success.
        '400':
          description: Invalid query parameters. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal server error.
