openapi: 3.0.0

info:
  title: argus
  description: My blog
  version: 1.0.0

servers:
  - url: http://localhost:8000
    description: local server
  - url: https://argus.champonian.com
    description: domain

paths:
  /api/find/article/list:
    get:
      summary: Return articles list.
      parameters:
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
        - name: num
          in: query
          required: true
          description: Number of articles.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  count:
                    type: number
                required:
                  - articles
                  - count
        '400':
          description: Query parameters are not satisfied.
        '500':
          description: Internal Server Error.

          
  /api/find/article/sortedId:
    get:
      summary: Return an article whose sortedId is selected.
      parameters:
        - name: sortedID
          in: query
          required: true
          description: Article sorted id.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  article:
                    $ref: '#/components/schemas/Article'
                  nextArticle:
                    $ref: '#/components/schemas/Article'
                  prevArticle:
                    $ref: '#/components/schemas/Article'
                required:
                  - article
                  - nextArticle
                  - prevArticle
        '400':
          description: Query parameters are not satisfied.
        '500':
          description: Internal Server Error.


  /api/find/article/list/title:
    get:
      summary: Return articles list by title.
      parameters:
        - name: title
          in: query
          required: true
          description: Article title.
          schema:
            type: string
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
        - name: num
          in: query
          required: true
          description: Number of articles.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  count:
                    type: number
                required:
                  - articles
                  - count
        '400':
          description: Query parameters are not satisfied.
        '500':
          description: Internal Server Error.


  /api/find/article/list/category:
    get:
      summary: Return articles list by category.
      parameters:
        - name: category
          in: query
          required: true
          description: Category name.
          schema:
            type: array
            items:
              type: string
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
        - name: num
          in: query
          required: true
          description: number of articles.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  count:
                    type: number
                required:
                  - articles
                  - count
        '400':
          description: Query parameters are not satisfied.
        '500':
          description: Internal Server Error.


  /api/find/category/list:
    get:
      summary: Return categories list.
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                required:
                  - categories
        '400':
          description: Query parameters are not satisfied.
        '500':
          description: Internal Server Error.


  /api/private/find/article/id:
    get:
      summary: Return an article whose id is selected
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          description: Article id.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  article:
                    $ref: '#/components/schemas/Article'
                required:
                  - article
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.


  /api/private/find/article/list:
    get:
      summary: Return all articles list.
      security:
        - BearerAuth: []
      parameters:
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
        - name: num
          in: query
          required: true
          description: Number of articles.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
                  count:
                    type: number
                required:
                  - articles
                  - count
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/private/find/draft/id:
    get:
      summary: Return a draft whose id is selected.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          description: Draft id.
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  draft:
                    $ref: '#/components/schemas/Draft'
                required:
                  - draft
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/private/find/draft/list:
    get:
      summary: Return all drafts list.
      security:
        - BearerAuth: []
      parameters:
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
        - name: num
          in: query
          required: true
          description: Number of drafts.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  drafts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Draft'
                  count:
                    type: number
                required:
                  - drafts
                  - count
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/private/find/image/list:
    get:
      summary: Return images list.
      security:
        - BearerAuth: []
      parameters:
        - name: p
          in: query
          required: true
          description: Page number.
          schema:
            type: number
        - name: num
          in: query
          required: true
          description: Number of images.
          schema:
            type: number
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  images:
                    type: array
                    items:
                      type: string
                  next:
                    type: boolean
                required:
                  - images
                  - next
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Err

          
  /api/private/register/article:
    post:
      summary: Register new article.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article:
                  $ref: '#/components/schemas/ArticleReq'
                draftId:
                  type: string
              required:
                - article
      responses:
        '200':
          description: Success.
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/private/register/draft:
    post:
      summary: Register new draft.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                draft:
                  $ref: '#/components/schemas/DraftReq'
              required:
                - draft
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  content:
                    type: string
                  imageHash:
                    type: string
                required:
                  - id
                  - content
                  - imageHash
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/private/register/image:
    post:
      summary: Register new image.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: string
                  format: binary
      responses:
        '200':
          description: Success.
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/private/update/article:
    put:
      summary: Update article.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article:
                  $ref: '#/components/schemas/ArticleReq'
              required:
                - article
      responses:
        '200':
          description: Success.
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/private/update/article/isPrivate:
    put:
      summary: Update article's isPrivate property.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                isPrivate:
                  type: boolean
              required:
                - id
                - isPrivate
      responses:
        '200':
          description: Success.
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/private/update/draft:
    put:
      summary: Update draft.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                draft:
                  $ref: '#/components/schemas/DraftReq'
              required:
                - draft
      responses:
        '200':
          description: Success.
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/private/delete/draft:
    delete:
      summary: Delete draft.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
              required:
                - draft
      responses:
        '200':
          description: Success.
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/private/delete/image:
    delete:
      summary: Delete images.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imageNames:
                  type: array
                  items:
                    type: string
                  
      responses:
        '200':
          description: Success.
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
  /api/verify/token:
    post:
      summary: Verify token.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success.
        '400':
          description: Query parameters are not satisfied. No authorization header.
        '403':
          description: Forbidden.
        '500':
          description: Internal Server Error.

          
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Article:
      type: object
      properties:
        id:
          type: string
        sortedId:
          type: number
        title:
          type: string
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
        createDate:
          type: string
        updateDate:
          type: string
        content:
          type: string
        imageHash:
          type: string
        isPrivate:
          type: boolean
      required:
        - id
        - sortedId
        - title
        - categories
        - createDate
        - updateDate
        - content
        - imageHash
        - isPrivate

    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        articleNum:
          type: number
      required:
        - id
        - name
        - articleNum

    Draft:
      type: object
      properties:
        id:
          type: string
        sortedId:
          type: number
        title:
          type: string
        categories:
          type: string
        updateDate:
          type: string
        content:
          type: string
        imageHash:
          type: string
      required:
        - id
        - sortedId
        - title
        - categories
        - updateDate
        - content
        - imageHash

    ArticleReq:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
            required:
              - id
              - name
        content:
          type: string
        imageHash:
          type: string
        isPrivate:
          type: boolean
      required:
        - id
        - title
        - categories
        - content
        - imageHash
        - isPrivate

    DraftReq:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        categories:
          type: string
        content:
          type: string
        imageHash:
          type: string
      required:
        - id
        - title
        - categories
        - content
        - imageHash
