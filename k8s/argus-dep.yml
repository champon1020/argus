apiVersion: apps/v1
kind: Deployment
metadata:
  name: argus-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: argus-backend
  template:
    metadata:
      name: argus-backend
      labels:
        app: argus-backend
    spec:
      containers:
        - name: argus
          image: gcr.io/alfheim-argus-269319/argus:2.1.6
          imagePullPolicy: IfNotPresent
          readinessProbe:
            timeoutSeconds: 30
            failureThreshold: 3
            httpGet:
              path: /healthcheck
              port: 8000
          ports:
            - containerPort: 8000
          env:
            - name: ARGUS_MODE
              value: deploy
          envFrom:
            - secretRef:
                name: argus-env
          volumeMounts:
            - name: argus-secrets-volume
              mountPath: /secret/argus
              readOnly: true
            - name: argus-resrc-volume
              mountPath: /argus/resrc
              readOnly: false
        - name: argus-file-server
          image: gcr.io/alfheim-argus-269319/argus-file-server:1.0
          imagePullPolicy: IfNotPresent
          readinessProbe:
            timeoutSeconds: 30
            failureThreshold: 3
            httpGet:
              path: /healthcheck
              port: 80
          ports:
            - containerPort: 80
          volumeMounts:
            - name: argus-resrc-volume
              mountPath: /usr/share/nginx/html/resrc
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            - "/cloud_sql_proxy"
            - "-instances=alfheim-argus-269319:us-west1:argus-mysql=tcp:0.0.0.0:3306"
            - "-credential_file=/secret/sql/client_secret.json"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - name: cloud-sql-credentials-volume
              mountPath: /secret/sql
              readOnly: true
      volumes:
        - name: argus-resrc-volume
          persistentVolumeClaim:
            claimName: argus-pvc
        - name: argus-secrets-volume
          secret:
            secretName: argus-secrets
        - name: cloud-sql-credentials-volume
          secret:
            secretName: cloud-sql-credentials
